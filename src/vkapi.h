#pragma once
#include <iostream>
#include "https.h"
class vkapi
{
    typedef std::string vk;
public:
    vkapi(https *);
    ~vkapi();
    std::string lastresponse;
    void save();
    void save(std::string);
private:
    void request(vk, vk);
    void request(vk);
    void readTokenFromFile();
    https * httpsObject;
    std::string token;
public: //autogenereated
    void accountBanUser (std::string user_id);
    void accountGetActiveOffers (std::string offset, std::string count);
    void accountChangePassword (std::string restore_sid, std::string change_password_hash, std::string old_password, std::string new_password);
    void accountGetAppPermissions (std::string user_id);
    void accountGetBanned (std::string offset, std::string count);
    void accountGetCounters (std::string filter);
    void accountGetInfo (std::string fields);
    void accountGetProfileInfo ();
    void accountLookupContacts (std::string contacts, std::string service, std::string mycontact, std::string return_all, std::string fields);
    void accountGetPushSettings (std::string device_id, std::string token);
    void accountSaveProfileInfo (std::string first_name, std::string last_name, std::string maiden_name, std::string screen_name, std::string cancel_request_id, std::string sex, std::string relation, std::string relation_partner_id, std::string bdate, std::string bdate_visibility, std::string home_town, std::string country_id, std::string city_id, std::string status);
    void accountSetInfo (std::string intro, std::string own_posts_default, std::string no_wall_replies);
    void accountRegisterDevice (std::string token, std::string device_model, std::string device_year, std::string device_id, std::string system_version, std::string settings, std::string sandbox, std::string no_text, std::string subscribe);
    void accountSetNameInMenu (std::string user_id, std::string name);
    void accountSetOffline ();
    void accountSetOnline (std::string voip);
    void accountSetPushSettings (std::string device_id, std::string settings, std::string key, std::string value);
    void accountSetSilenceMode (std::string device_id, std::string time, std::string chat_id, std::string user_id, std::string sound, std::string token);
    void accountUnbanUser (std::string user_id);
    void accountUnregisterDevice (std::string device_id, std::string sandbox, std::string token);
    void appsGet (std::string app_id, std::string app_ids, std::string platform, std::string extended, std::string return_friends, std::string fields, std::string name_case);
    void appsDeleteAppRequests ();
    void appsGetLeaderboard (std::string type, std::string global, std::string extended);
    void appsGetFriendsList (std::string extended, std::string count, std::string offset, std::string type, std::string fields);
    void appsGetCatalog (std::string sort, std::string offset, std::string count, std::string platform, std::string extended, std::string return_friends, std::string fields, std::string name_case, std::string q, std::string genre_id, std::string filter);
    void appsGetScore (std::string user_id);
    void appsSendRequest (std::string user_id, std::string text, std::string type, std::string name, std::string key, std::string separate);
    void audioAddAlbum (std::string group_id, std::string title);
    void audioAdd (std::string audio_id, std::string owner_id, std::string group_id, std::string album_id);
    void audioDelete (std::string audio_id, std::string owner_id);
    void audioDeleteAlbum (std::string group_id, std::string album_id);
    void audioEditAlbum (std::string group_id, std::string album_id, std::string title);
    void audioGet (std::string owner_id, std::string album_id, std::string audio_ids, std::string need_user, std::string offset, std::string count);
    void audioGetBroadcastList (std::string filter, std::string active);
    void audioGetAlbums (std::string owner_id, std::string offset, std::string count);
    void audioEdit (std::string owner_id, std::string audio_id, std::string artist, std::string title, std::string text, std::string genre_id, std::string no_search);
    void audioGetLyrics (std::string lyrics_id);
    void audioGetById (std::string audios);
    void audioGetCount (std::string owner_id);
    void audioGetPopular (std::string only_eng, std::string genre_id, std::string offset, std::string count);
    void audioGetRecommendations (std::string target_audio, std::string user_id, std::string offset, std::string count, std::string shuffle);
    void audioGetUploadServer ();
    void audioMoveToAlbum (std::string group_id, std::string album_id, std::string audio_ids);
    void audioReorder (std::string audio_id, std::string owner_id, std::string before, std::string after);
    void audioRestore (std::string audio_id, std::string owner_id);
    void audioSearch (std::string q, std::string auto_complete, std::string lyrics, std::string performer_only, std::string sort, std::string search_own, std::string offset, std::string count);
    void authCheckPhone (std::string phone, std::string client_id, std::string client_secret);
    void audioSave (std::string server, std::string audio, std::string hash, std::string artist, std::string title);
    void authRestore (std::string phone);
    void boardCloseTopic (std::string group_id, std::string topic_id);
    void boardDeleteComment (std::string group_id, std::string topic_id, std::string comment_id);
    void boardEditTopic (std::string group_id, std::string topic_id, std::string title);
    void boardFixTopic (std::string group_id, std::string topic_id);
    void boardGetComments (std::string group_id, std::string topic_id, std::string need_likes, std::string start_comment_id, std::string offset, std::string count, std::string extended, std::string sort);
    void boardEditComment (std::string group_id, std::string topic_id, std::string comment_id, std::string text, std::string attachments);
    void authConfirm (std::string client_id, std::string client_secret, std::string phone, std::string code, std::string password, std::string test_mode, std::string intro);
    void boardGetTopics (std::string group_id, std::string topic_ids, std::string order, std::string offset, std::string count, std::string extended, std::string preview, std::string preview_length);
    void boardAddComment (std::string group_id, std::string topic_id, std::string text, std::string attachments, std::string from_group, std::string sticker_id);
    void authSignup (std::string first_name, std::string last_name, std::string client_id, std::string client_secret, std::string phone, std::string password, std::string test_mode, std::string voice, std::string sex, std::string sid);
    void audioSetBroadcast (std::string audio, std::string target_ids);
    void boardDeleteTopic (std::string group_id, std::string topic_id);
    void boardRestoreComment (std::string group_id, std::string topic_id, std::string comment_id);
    void boardAddTopic (std::string group_id, std::string title, std::string text, std::string from_group, std::string attachments);
    void boardUnfixTopic (std::string group_id, std::string topic_id);
    void boardOpenTopic (std::string group_id, std::string topic_id);
    void databaseGetCountries (std::string need_all, std::string code, std::string offset, std::string count);
    void databaseGetCountriesById (std::string country_ids);
    void databaseGetCities (std::string country_id, std::string region_id, std::string q, std::string need_all, std::string offset, std::string count);
    void databaseGetChairs (std::string faculty_id, std::string offset, std::string count);
    void databaseGetCitiesById (std::string city_ids);
    void databaseGetRegions (std::string country_id, std::string q, std::string offset, std::string count);
    void databaseGetFaculties (std::string university_id, std::string offset, std::string count);
    void databaseGetSchoolClasses (std::string country_id);
    void databaseGetUniversities (std::string q, std::string country_id, std::string city_id, std::string offset, std::string count);
    void databaseGetSchools (std::string q, std::string city_id, std::string offset, std::string count);
    void docsAdd (std::string owner_id, std::string doc_id, std::string access_key);
    void docsDelete (std::string owner_id, std::string doc_id);
    void docsGetById (std::string docs);
    void databaseGetStreetsById (std::string street_ids);
    void docsGet (std::string count, std::string offset, std::string owner_id);
    void docsGetUploadServer (std::string group_id);
    void docsGetWallUploadServer (std::string group_id);
    void execute (std::string code);
    void docsSave (std::string file, std::string title, std::string tags);
    void faveAddGroup (std::string group_id);
    void faveAddLink (std::string link, std::string text);
    void faveGetLinks (std::string offset, std::string count);
    void faveGetPhotos (std::string offset, std::string count, std::string photo_sizes);
    void faveGetPosts (std::string offset, std::string count, std::string extended);
    void faveAddUser (std::string user_id);
    void faveGetUsers (std::string offset, std::string count);
    void faveGetVideos (std::string offset, std::string count, std::string extended);
    void faveRemoveLink (std::string link_id);
    void friendsAddList (std::string name, std::string user_ids);
    void faveRemoveGroup (std::string group_id);
    void friendsAreFriends (std::string user_ids, std::string need_sign);
    void friendsAdd (std::string user_id, std::string text, std::string follow);
    void friendsDeleteAllRequests ();
    void friendsDelete (std::string user_id);
    void friendsDeleteList (std::string list_id);
    void friendsGet (std::string user_id, std::string order, std::string list_id, std::string count, std::string offset, std::string fields, std::string name_case);
    void friendsEdit (std::string user_id, std::string list_ids);
    void friendsEditList (std::string name, std::string list_id, std::string user_ids, std::string add_user_ids, std::string delete_user_ids);
    void friendsGetAppUsers ();
    void friendsGetByPhones (std::string phones, std::string fields);
    void friendsGetLists (std::string user_id, std::string return_system);
    void friendsGetAvailableForCall (std::string fields, std::string name_case);
    void friendsGetMutual (std::string source_uid, std::string target_uid, std::string target_uids, std::string order, std::string count, std::string offset);
    void friendsGetOnline (std::string user_id, std::string list_id, std::string online_mobile, std::string order, std::string count, std::string offset);
    void friendsGetRecent (std::string count);
    void friendsGetSuggestions (std::string filter, std::string count, std::string offset, std::string fields, std::string name_case);
    void friendsGetRequests (std::string offset, std::string count, std::string extended, std::string need_mutual, std::string out, std::string sort, std::string suggested);
    void friendsSearch (std::string user_id, std::string q, std::string fields, std::string name_case, std::string offset, std::string count);
    void giftsGet (std::string user_id, std::string count, std::string offset);
    void groupsAddLink (std::string group_id, std::string link, std::string text);
    void groupsApproveRequest (std::string group_id, std::string user_id);
    void groupsBanUser (std::string group_id, std::string user_id, std::string end_date, std::string reason, std::string comment, std::string comment_visible);
    void groupsCreate (std::string title, std::string description, std::string type, std::string subtype);
    void groupsEdit (std::string group_id, std::string title, std::string description, std::string screen_name, std::string access, std::string website, std::string subject, std::string email, std::string phone, std::string rss, std::string event_start_date, std::string event_finish_date, std::string event_group_id, std::string public_category, std::string public_subcategory, std::string public_date, std::string wall, std::string topics, std::string photos, std::string video, std::string audio, std::string links, std::string events, std::string places, std::string contacts, std::string docs, std::string wiki);
    void groupsDeleteLink (std::string group_id, std::string link_id);
    void groupsEditLink (std::string group_id, std::string link_id, std::string text);
    void groupsEditManager (std::string group_id, std::string user_id, std::string role, std::string is_contact, std::string contact_position, std::string contact_phone, std::string contact_email);
    void groupsEditPlace (std::string group_id, std::string title, std::string address, std::string country_id, std::string city_id, std::string latitude, std::string longitude);
    void groupsGetBanned (std::string group_id, std::string offset, std::string count, std::string fields, std::string user_id);
    void groupsGet (std::string user_id, std::string extended, std::string filter, std::string fields, std::string offset, std::string count);
    void groupsGetInvites (std::string offset, std::string count, std::string extended);
    void groupsGetInvitedUsers (std::string group_id, std::string offset, std::string count, std::string fields, std::string name_case);
    void groupsGetById (std::string group_ids, std::string group_id, std::string fields);
    void groupsGetMembers (std::string group_id, std::string sort, std::string offset, std::string count, std::string fields, std::string filter);
    void groupsGetRequests (std::string group_id, std::string offset, std::string count, std::string fields);
    void groupsGetSettings (std::string group_id);
    void groupsInvite (std::string group_id, std::string user_id);
    void groupsIsMember (std::string group_id, std::string user_id, std::string user_ids, std::string extended);
    void groupsJoin (std::string group_id, std::string not_sure);
    void groupsLeave (std::string group_id);
    void groupsRemoveUser (std::string group_id, std::string user_id);
    void groupsReorderLink (std::string group_id, std::string link_id, std::string after);
    void groupsSearch (std::string q, std::string type, std::string country_id, std::string city_id, std::string future, std::string sort, std::string offset, std::string count);
    void groupsUnbanUser (std::string group_id, std::string user_id);
    void likesAdd (std::string type, std::string owner_id, std::string item_id, std::string access_key, std::string ref);
    void likesDelete (std::string type, std::string owner_id, std::string item_id);
    void messagesCreateChat (std::string user_ids, std::string title);
    void messagesAddChatUser (std::string chat_id, std::string user_id);
    void likesGetList (std::string type, std::string owner_id, std::string item_id, std::string page_url, std::string filter, std::string friends_only, std::string extended, std::string offset, std::string count, std::string skip_own);
    void likesIsLiked (std::string user_id, std::string type, std::string owner_id, std::string item_id);
    void messagesDeleteChatPhoto (std::string chat_id);
    void messagesDelete (std::string message_ids);
    void messagesDeleteDialog (std::string user_id, std::string peer_id, std::string offset, std::string count);
    void messagesEditChat (std::string chat_id, std::string title);
    void messagesGet (std::string out, std::string offset, std::string count, std::string time_offset, std::string filters, std::string preview_length, std::string last_message_id);
    void messagesGetById (std::string message_ids, std::string preview_length);
    void messagesGetChat (std::string chat_id, std::string chat_ids, std::string fields, std::string name_case);
    void messagesGetChatUsers (std::string chat_id, std::string chat_ids, std::string fields, std::string name_case);
    void messagesGetDialogs (std::string offset, std::string count, std::string start_message_id, std::string preview_length, std::string unread, std::string user_id);
    void messagesGetHistory (std::string offset, std::string count, std::string user_id, std::string chat_id, std::string peer_id, std::string start_message_id, std::string rev);
    void messagesGetLastActivity (std::string user_id);
    void messagesGetLongPollHistory (std::string ts, std::string pts, std::string preview_length, std::string onlines, std::string fields, std::string events_limit, std::string msgs_limit, std::string max_msg_id);
    void messagesGetLongPollServer (std::string use_ssl, std::string need_pts);
    void messagesMarkAsImportant (std::string message_ids, std::string important);
    void messagesMarkAsRead (std::string message_ids, std::string peer_id, std::string start_message_id);
    void messagesRemoveChatUser (std::string chat_id, std::string user_id);
    void messagesRestore (std::string message_id);
    void messagesSearch (std::string q, std::string preview_length, std::string offset, std::string count);
    void messagesSetActivity (std::string user_id, std::string type, std::string peer_id);
    void newsfeedDeleteBan (std::string user_ids, std::string group_ids);
    void messagesSend (std::string user_id, std::string peer_id, std::string domain, std::string chat_id, std::string user_ids, std::string message, std::string guid, std::string lat, std::string long_, std::string attachment, std::string forward_messages, std::string sticker_id);
    void messagesSetChatPhoto (std::string file);
    void messagesSearchDialogs (std::string q, std::string limit, std::string fields);
    void newsfeedDeleteList (std::string list_id);
    void newsfeedGet (std::string filters, std::string return_banned, std::string start_time, std::string end_time, std::string max_photos, std::string source_ids, std::string start_from, std::string count, std::string fields, std::string from, std::string offset);
    void newsfeedGetBanned (std::string extended, std::string fields, std::string name_case);
    void newsfeedGetComments (std::string count, std::string filters, std::string reposts, std::string start_time, std::string end_time, std::string last_comments_count, std::string start_from, std::string fields, std::string from, std::string last_comments);
    void newsfeedGetLists (std::string list_ids, std::string extended);
    void newsfeedGetMentions (std::string owner_id, std::string start_time, std::string end_time, std::string offset, std::string count);
    void newsfeedIgnoreItem (std::string type, std::string owner_id, std::string item_id);
    void newsfeedGetSuggestedSources (std::string offset, std::string count, std::string shuffle, std::string fields);
    void newsfeedGetRecommended (std::string start_time, std::string end_time, std::string max_photos, std::string start_from, std::string count, std::string fields, std::string from, std::string offset);
    void newsfeedSaveList (std::string list_id, std::string title, std::string source_ids, std::string no_reposts);
    void newsfeedSearch (std::string q, std::string extended, std::string count, std::string latitude, std::string longitude, std::string start_time, std::string end_time, std::string start_from, std::string fields, std::string start_id, std::string offset);
    void newsfeedUnignoreItem (std::string type, std::string owner_id, std::string item_id);
    void newsfeedUnsubscribe (std::string type, std::string owner_id, std::string item_id);
    void notesAdd (std::string title, std::string text, std::string privacy_view, std::string privacy_comment, std::string privacy, std::string comment_privacy);
    void notesCreateComment (std::string note_id, std::string owner_id, std::string reply_to, std::string message);
    void notesDelete (std::string note_id);
    void notesEdit (std::string note_id, std::string title, std::string text, std::string privacy_view, std::string privacy_comment, std::string privacy, std::string comment_privacy);
    void notesDeleteComment (std::string comment_id, std::string owner_id);
    void notesEditComment (std::string comment_id, std::string owner_id, std::string message);
    void notesGet (std::string note_ids, std::string user_id, std::string offset, std::string count, std::string sort);
    void notesGetById (std::string note_id, std::string owner_id, std::string need_wiki);
    void notesGetComments (std::string note_id, std::string owner_id, std::string sort, std::string offset, std::string count);
    void notesRestoreComment (std::string comment_id, std::string owner_id);
    void notesGetFriendsNotes (std::string offset, std::string count);
    void notificationsGet (std::string count, std::string start_from, std::string filters, std::string start_time, std::string end_time, std::string from, std::string offset);
    void notificationsMarkAsViewed ();
    void pagesGet (std::string owner_id, std::string page_id, std::string global, std::string site_preview, std::string title, std::string need_source, std::string need_html);
    void pagesClearCache (std::string url);
    void pagesGetHistory (std::string page_id, std::string group_id, std::string user_id);
    void pagesGetVersion (std::string version_id, std::string group_id, std::string user_id, std::string need_html);
    void pagesGetTitles (std::string group_id);
    void pagesParseWiki (std::string text, std::string group_id);
    void pagesSave (std::string text, std::string page_id, std::string group_id, std::string user_id, std::string title);
    void pagesSaveAccess (std::string page_id, std::string group_id, std::string user_id, std::string view, std::string edit);
    void photosConfirmTag (std::string owner_id, std::string photo_id, std::string tag_id);
    void photosCopy (std::string owner_id, std::string photo_id, std::string access_key);
    void photosCreateAlbum (std::string title, std::string group_id, std::string description, std::string privacy_view, std::string privacy_comment, std::string upload_by_admins_only, std::string comments_disabled, std::string privacy, std::string comment_privacy);
    void photosCreateComment (std::string owner_id, std::string photo_id, std::string message, std::string attachments, std::string from_group, std::string reply_to_comment, std::string sticker_id, std::string access_key, std::string guid);
    void photosDeleteAlbum (std::string album_id, std::string group_id);
    void photosDelete (std::string owner_id, std::string photo_id);
    void photosDeleteComment (std::string owner_id, std::string comment_id);
    void photosEdit (std::string owner_id, std::string photo_id, std::string caption, std::string latitude, std::string longitude, std::string place_str, std::string foursquare_id, std::string delete_place);
    void photosEditComment (std::string owner_id, std::string comment_id, std::string message, std::string attachments);
    void photosEditAlbum (std::string album_id, std::string title, std::string description, std::string owner_id, std::string privacy_view, std::string privacy_comment, std::string upload_by_admins_only, std::string comments_disabled, std::string privacy, std::string comment_privacy);
    void photosGet (std::string owner_id, std::string album_id, std::string photo_ids, std::string rev, std::string extended, std::string feed_type, std::string feed, std::string photo_sizes, std::string offset, std::string count);
    void photosGetAlbums (std::string owner_id, std::string album_ids, std::string offset, std::string count, std::string need_system, std::string need_covers, std::string photo_sizes);
    void photosGetAlbumsCount (std::string user_id, std::string group_id);
    void photosGetAll (std::string owner_id, std::string extended, std::string offset, std::string count, std::string photo_sizes, std::string no_service_albums, std::string need_hidden, std::string skip_hidden);
    void photosGetAllComments (std::string owner_id, std::string album_id, std::string need_likes, std::string offset, std::string count);
    void photosGetById (std::string photos, std::string extended, std::string photo_sizes);
    void photosGetChatUploadServer (std::string chat_id, std::string crop_x, std::string crop_y, std::string crop_width);
    void photosGetComments (std::string owner_id, std::string photo_id, std::string need_likes, std::string start_comment_id, std::string offset, std::string count, std::string sort, std::string access_key, std::string extended, std::string fields, std::string skip_before_id, std::string skip_after_id);
    void photosGetNewTags (std::string offset, std::string count);
    void photosGetMessagesUploadServer ();
    void photosGetOwnerPhotoUploadServer (std::string owner_id);
    void photosGetTags (std::string owner_id, std::string photo_id, std::string access_key);
    void photosGetUploadServer (std::string album_id, std::string group_id);
    void photosGetWallUploadServer (std::string group_id);
    void photosGetUserPhotos (std::string user_id, std::string offset, std::string count, std::string extended, std::string sort);
    void photosMakeCover (std::string owner_id, std::string photo_id, std::string album_id);
    void photosMove (std::string owner_id, std::string target_album_id, std::string photo_id);
    void photosRemoveTag (std::string owner_id, std::string photo_id, std::string tag_id);
    void photosReorderPhotos (std::string owner_id, std::string photo_id, std::string before, std::string after);
    void photosReorderAlbums (std::string owner_id, std::string album_id, std::string before, std::string after);
    void photosPutTag (std::string owner_id, std::string photo_id, std::string user_id, std::string x, std::string y);
    void photosReport (std::string owner_id, std::string photo_id, std::string reason);
    void photosRestore (std::string owner_id, std::string photo_id);
    void photosReportComment (std::string owner_id, std::string comment_id, std::string reason);
    void photosRestoreComment (std::string owner_id, std::string comment_id);
    void photosSave (std::string album_id, std::string group_id, std::string server, std::string photos_list, std::string hash, std::string latitude, std::string longitude, std::string caption);
    void photosSaveMessagesPhoto (std::string photo);
    void photosSaveOwnerPhoto (std::string server, std::string hash, std::string photo);
    void photosSaveWallPhoto (std::string user_id, std::string group_id, std::string photo, std::string server, std::string hash);
    void placesAdd (std::string type, std::string title, std::string latitude, std::string longitude, std::string country, std::string city, std::string address);
    void photosSearch (std::string q, std::string lat, std::string long_, std::string start_time, std::string end_time, std::string sort, std::string offset, std::string count, std::string radius);
    void placesCheckin (std::string place_id, std::string text, std::string latitude, std::string longitude, std::string friends_only, std::string services);
    void placesGetById (std::string places);
    void placesGetCheckins (std::string latitude, std::string longitude, std::string place, std::string user_id, std::string offset, std::string count, std::string timestamp, std::string friends_only, std::string need_places);
    void placesGetTypes ();
    void placesSearch (std::string q, std::string city, std::string latitude, std::string longitude, std::string radius, std::string offset, std::string count);
    void pollsAddVote (std::string owner_id, std::string poll_id, std::string answer_id, std::string is_board);
    void pollsCreate (std::string question, std::string is_anonymous, std::string owner_id, std::string add_answers);
    void pollsDeleteVote (std::string owner_id, std::string poll_id, std::string answer_id, std::string is_board);
    void pollsEdit (std::string owner_id, std::string poll_id, std::string question, std::string add_answers, std::string edit_answers, std::string delete_answers);
    void pollsGetById (std::string owner_id, std::string is_board, std::string poll_id);
    void pollsGetVoters (std::string owner_id, std::string poll_id, std::string answer_ids, std::string is_board, std::string friends_only, std::string offset, std::string count, std::string fields, std::string name_case);
    void statsGet (std::string group_id, std::string app_id, std::string date_from, std::string date_to);
    void searchGetHints (std::string q, std::string limit, std::string filters, std::string search_global);
    void statsGetPostReach (std::string owner_id, std::string post_id);
    void statusGet (std::string user_id, std::string group_id);
    void statsTrackVisitor ();
    void storageGet (std::string key, std::string keys, std::string user_id, std::string global);
    void statusSet (std::string text, std::string group_id);
    void storageGetKeys (std::string user_id, std::string global, std::string offset, std::string count);
    void usersGet (std::string user_ids, std::string fields, std::string name_case);
    void storageSet (std::string key, std::string value, std::string user_id, std::string global);
    void usersGetNearby (std::string latitude, std::string longitude, std::string accuracy, std::string timeout, std::string radius, std::string fields, std::string name_case);
    void usersGetFollowers (std::string user_id, std::string offset, std::string count, std::string fields, std::string name_case);
    void usersIsAppUser (std::string user_id);
    void usersReport (std::string user_id, std::string type, std::string comment);
    void usersSearch (std::string q, std::string sort, std::string offset, std::string count, std::string fields, std::string city, std::string country, std::string hometown, std::string university_country, std::string university, std::string university_year, std::string university_faculty, std::string university_chair, std::string sex, std::string status, std::string age_from, std::string age_to, std::string birth_day, std::string birth_month, std::string birth_year, std::string online, std::string has_photo, std::string school_country, std::string school_city, std::string school_class, std::string school, std::string school_year, std::string religion, std::string interests, std::string company, std::string position, std::string group_id, std::string from_list);
    void utilsCheckLink (std::string url);
    void usersGetSubscriptions (std::string user_id, std::string extended, std::string offset, std::string count, std::string fields);
    void utilsGetServerTime ();
    void utilsResolveScreenName (std::string screen_name);
    void videoAdd (std::string target_id, std::string video_id, std::string owner_id);
    void videoAddAlbum (std::string group_id, std::string title, std::string privacy);
    void videoAddToAlbum (std::string target_id, std::string album_id, std::string album_ids, std::string owner_id, std::string video_id);
    void videoDelete (std::string video_id, std::string owner_id, std::string target_id);
    void videoDeleteAlbum (std::string group_id, std::string album_id);
    void videoCreateComment (std::string owner_id, std::string video_id, std::string message, std::string attachments, std::string from_group, std::string reply_to_comment, std::string sticker_id);
    void videoDeleteComment (std::string owner_id, std::string comment_id);
    void videoEditAlbum (std::string group_id, std::string album_id, std::string title, std::string privacy);
    void videoEdit (std::string owner_id, std::string video_id, std::string name, std::string desc, std::string privacy_view, std::string privacy_comment, std::string no_comments, std::string repeat);
    void videoEditComment (std::string owner_id, std::string comment_id, std::string message, std::string attachments);
    void videoGetAlbumById (std::string owner_id, std::string album_id);
    void videoGetAlbums (std::string owner_id, std::string offset, std::string count, std::string extended, std::string need_system);
    void videoGetComments (std::string owner_id, std::string video_id, std::string need_likes, std::string start_comment_id, std::string offset, std::string count, std::string sort, std::string extended);
    void videoGet (std::string owner_id, std::string videos, std::string album_id, std::string count, std::string offset, std::string extended);
    void videoGetAlbumsByVideo (std::string target_id, std::string owner_id, std::string video_id, std::string extended);
    void videoGetNewTags (std::string offset, std::string count);
    void videoGetTags (std::string owner_id, std::string video_id);
    void videoGetUserVideos (std::string user_id, std::string offset, std::string count, std::string extended);
    void videoPutTag (std::string user_id, std::string owner_id, std::string video_id, std::string tagged_name);
    void videoRemoveFromAlbum (std::string target_id, std::string album_id, std::string album_ids, std::string owner_id, std::string video_id);
    void videoRemoveTag (std::string tag_id, std::string owner_id, std::string video_id);
    void videoReorderAlbums (std::string owner_id, std::string album_id, std::string before, std::string after);
    void videoReport (std::string owner_id, std::string video_id, std::string reason, std::string comment, std::string search_query);
    void videoRestore (std::string video_id, std::string owner_id);
    void videoReportComment (std::string owner_id, std::string comment_id, std::string reason);
    void videoRestoreComment (std::string owner_id, std::string comment_id);
    void videoSave (std::string name, std::string description, std::string is_private, std::string wallpost, std::string link, std::string group_id, std::string album_id, std::string privacy_view, std::string privacy_comment, std::string no_comments, std::string repeat);
    void videoSearch (std::string q, std::string sort, std::string hd, std::string adult, std::string filters, std::string search_own, std::string offset, std::string longer, std::string shorter, std::string count, std::string extended);
    void wallAddComment (std::string owner_id, std::string post_id, std::string from_group, std::string text, std::string reply_to_comment, std::string attachments, std::string sticker_id, std::string ref);
    void wallDelete (std::string owner_id, std::string post_id);
    void wallDeleteComment (std::string owner_id, std::string comment_id);
    void wallEditComment (std::string owner_id, std::string comment_id, std::string message, std::string attachments);
    void wallEdit (std::string owner_id, std::string post_id, std::string friends_only, std::string message, std::string attachments, std::string services, std::string signed_, std::string publish_date, std::string lat, std::string long_, std::string place_id);
    void wallGet (std::string owner_id, std::string domain, std::string offset, std::string count, std::string filter, std::string extended, std::string fields);
    void wallGetById (std::string posts, std::string extended, std::string copy_history_depth, std::string fields);
    void wallGetComments (std::string owner_id, std::string post_id, std::string need_likes, std::string start_comment_id, std::string offset, std::string count, std::string sort, std::string preview_length, std::string extended);
    void wallGetReposts (std::string owner_id, std::string post_id, std::string offset, std::string count);
    void wallPin (std::string owner_id, std::string post_id);
    void wallReportComment (std::string owner_id, std::string comment_id, std::string reason);
    void wallReportPost (std::string owner_id, std::string post_id, std::string reason);
    void wallRepost (std::string object, std::string message, std::string group_id, std::string ref);
    void wallPost (std::string owner_id, std::string friends_only, std::string from_group, std::string message, std::string attachments, std::string services, std::string signed_, std::string publish_date, std::string lat, std::string long_, std::string place_id, std::string post_id);
    void wallRestore (std::string owner_id, std::string post_id);
    void wallSearch (std::string owner_id, std::string domain, std::string query, std::string owners_only, std::string count, std::string offset, std::string extended, std::string fields);
    void wallUnpin (std::string owner_id, std::string post_id);
    void widgetsGetComments (std::string widget_api_id, std::string url, std::string page_id, std::string order, std::string fields, std::string offset, std::string count);
    void wallRestoreComment (std::string owner_id, std::string comment_id);
    void widgetsGetPages (std::string widget_api_id, std::string order, std::string period, std::string offset, std::string count);


};